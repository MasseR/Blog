if (! this.sh_languages) {
  this.sh_languages = {};
}
sh_languages['lisp'] = [
  [
    [
      /#\|/g,
      'sh_comment',
      1
    ],
    [
      /;/g,
      'sh_comment',
      2
    ],
    [
      /"/g,
      'sh_string',
      3
    ],
    [
      /(?:\#(?:x|o|b|X|O|B))?[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?/g,
      'sh_number',
      -1
    ],
    [
      /#?'(?:\b|\\/|\+|\?|\*|\-)[A-Za-z0-9_\\/\-\+\*\?:]+(?:\+|\?|\*|\-|\\/|\b)/g,
      'sh_type',
      -1
    ],
    [
      /:[A-Za-z0-9\-]+/g,
      'sh_preproc',
      -1
    ],
    [
      /(?:\+|\*)[A-Za-z0-9_\-\+\*\?:]+(?:\+|\*)/g,
      'sh_variable',
      -1
    ],
    [
      /(?:\b|\+|\?|\*|\-)[A-Za-z0-9_\-\+\*\?:]+(?:\+|\?|\*|\-|\b)/g,
      'sh_normal',
      -1
    ],
    [
      /(\()(defconstant|defvar|defparameter|case|cond|in-package|deftype|list|definline|declare|when|defgeneric|defmethod|defpackage|defstruct|defclass|defun|defmacro|loop|let\*|let|progn|push|pop|cons|car|setf|getf|cdr|if|equal|eql|eq|\+|\*|\-)/g,
      ['sh_cbracket', 'sh_keyword'],
      -1
    ],
    [
      /\(|\)/g,
      'sh_cbracket',
      -1
    ]
  ],
  [
    [
      /\|#/g,
      'sh_comment',
      -2
    ],
    [
      /#\|/g,
      'sh_comment',
      1
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ]
  ],
  [
    [
      /"/g,
      'sh_string',
      -2
    ],
    [
      /\\./g,
      'sh_specialchar',
      -1
    ]
  ]
];
